#### counting each column
rest <- tibble(.rows = 4, choice = c('Per nulla',
'Poco',
'Abbastanza',
'Molto'))
for (i in 1:10) {
vec <- Restare[startsWith(names(Restare),"rest")] |>
group_by(Restare[startsWith(names(Restare),"rest")][i]) |>
drop_na() |>
count(name = paste(names(Restare[startsWith(names(Restare),"rest")][i]), '_n')) |>
rename('choice' = names(Restare[startsWith(names(Restare),"rest")][i]))
rest <- full_join(rest, vec |> mutate(choice = choice))
}
rm(i)
#### data wrangling
rest2 <- data.frame(t(rest[-1])) # swapping columns-rows
colnames(rest2) <- rest$choice
rest <- rownames_to_column(rest2) |>
mutate(rowname = gsub('_n', '', rowname)) |> # column
rename(choice = rowname)
rm(rest2)
rest <- rest |>
mutate(index = round(((Abbastanza + Molto)/89)*100, 2)) # % di abbastanza + molto importante
### graphics
labels<-data.frame(
y = c(25,50,75,100),
x = rep(0.25,4)
)
rest |>
filter(choice != 'restFort ') |>
mutate(choice = case_match(choice,
'restLeg '	~ 'Legame/impegno per la comunità',
'restSoc '	~ 'Contatti sociali e umani più gratificanti',
'restNat '	~ 'Contatto con la natura',
'restQual '	~ 'Qualità e stile di vita',
'restOpp '	~ 'Opportunità anche nel restare',
'restImp '	~ 'Idea imprenditoriale',
'restFam '	~ 'Esigenze personali/familiari',
'restCost '	~ 'Costo della vita più basso',
'restAmb '	~ 'Scarsa importanza alla carriera'
)) |>
ggplot(aes(x = choice, y = index, fill = choice)) +
geom_col() +
coord_polar() +
scale_y_continuous(limits = c(0, 85)) +
labs(title = 'Motivi per restare') +
scale_fill_manual(values = met.brewer('Tiepolo', 9)) +
theme_void() +
theme(axis.title = element_blank(),
legend.position = 'right',
legend.title = element_blank(),
plot.title = element_text(size = 20, hjust = .5))
ggsave('img/motRest.png', width = 7, height = 5)
## Motivi per lasciare ---------------------------------------------------------
### graphics df
#### counting each column
lasc <- tibble(.rows = 4, choice = c('Abbastanza', 'Molto', 'Per nulla', 'Poco'))
for (i in 1:10) {
vec <- Restare[startsWith(names(Restare),"lasc")] |>
group_by(Restare[startsWith(names(Restare),"lasc")][i]) |>
drop_na() |>
count(name = paste(names(Restare[startsWith(names(Restare),"lasc")][i]), '_n')) |>
rename('choice' = names(Restare[startsWith(names(Restare),"lasc")][i]))
lasc <- full_join(lasc, vec)
}
rm(i)
#### data wrangling
lasc2 <- data.frame(t(lasc[-1])) # swapping columns-rows
colnames(lasc2) <-  lasc$choice
lasc <- rownames_to_column(lasc2) |>
mutate(rowname = gsub('_n', '', rowname)) |> # column
rename(choice = rowname)
rm(lasc2)
lasc <- lasc |>
mutate(index = round(((Abbastanza + Molto)/166)*100, 2)) # % di abbastanza + molto importante
### graphics
labels<-data.frame(
y = c(25,50,75,100),
x = rep(0.25,4)
)
lasc |>
mutate(choice = case_match(choice,
'lascEsp '	~ 'Ampliare i propri orizzonti',
'lascOpp '	~ 'Formazione/offerte di lavoro',
'lascImp '	~ 'Idea imprenditoriale',
'lascEst '	~ 'Bellezza estetica delle città',
'lascSoc '	~ 'Relazioni sociali',
'lascFam '	~ 'Realizzazione familiare',
'lascServ '	~ 'Offerta di servizi',
'lascRit '	~ 'Realizzarsi per poi tornare',
'lascTent '	~ 'Tentare a realizzarsi',
'lascCult '	~ 'Vita culturale più intensa'
)) |>
ggplot(aes(x = choice, y = index, fill = choice)) +
geom_col() +
coord_polar() +
scale_y_continuous(limits = c(0, 95)) +
labs(title = 'Motivi per andare') +
scale_fill_manual(values = met.brewer('Tiepolo', 10)) +
theme_void() +
theme(axis.title = element_blank(),
legend.position = 'right',
legend.title = element_blank(),
plot.title = element_text(size = 20, hjust = .5))
#| label: Relationship to Umbria
#| fig-width: 4
#| fig-height: 7
## Rapporto con la regione -----------------------------------------------------
Restare |>
group_by(rapp, occ) |>
count() |>
ggplot(aes(values = n, label = rapp, colour = rapp)) +
geom_pictogram(make_proportional = T, flip = T, size = 6) +
scale_label_pictogram(
values = c("user")
) +
scale_color_manual(values = met.brewer('Tiepolo', 4)) +
facet_wrap(~occ) +
labs(title = 'Attitudine al restare') +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
#| label: Relationship to Umbria
#| fig-width: 4.5
#| fig-height: 7
## Rapporto con la regione -----------------------------------------------------
Restare |>
group_by(rapp, occ) |>
count() |>
ggplot(aes(values = n, label = rapp, colour = rapp)) +
geom_pictogram(make_proportional = T, flip = T, size = 6) +
scale_label_pictogram(
values = c("user")
) +
scale_color_manual(values = met.brewer('Tiepolo', 4)) +
facet_wrap(~occ) +
labs(title = 'Attitudine al restare') +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
#| label: Relationship to Umbria
#| fig-width: 5
#| fig-height: 7
## Rapporto con la regione -----------------------------------------------------
Restare |>
group_by(rapp, occ) |>
count() |>
ggplot(aes(values = n, label = rapp, colour = rapp)) +
geom_pictogram(make_proportional = T, flip = T, size = 6) +
scale_label_pictogram(
values = c("user")
) +
scale_color_manual(values = met.brewer('Tiepolo', 4)) +
facet_wrap(~occ) +
labs(title = 'Attitudine al restare') +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
Restare |>
group_by(rapp, occ) |>
count()
#| label: Relationship to Umbria
#| fig-width: 5
#| fig-height: 7
## Rapporto con la regione -----------------------------------------------------
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD student')) |>
ggplot(aes(values = n, label = rapp, colour = rapp)) +
geom_pictogram(make_proportional = T, flip = T, size = 6) +
scale_label_pictogram(
values = c("user")
) +
scale_color_manual(values = met.brewer('Tiepolo', 4)) +
facet_wrap(~occ) +
labs(title = 'Attitude towards staying') +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
#| label: Relationship to Umbria
#| fig-width: 5
#| fig-height: 7
## Rapporto con la regione -----------------------------------------------------
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD candidate')) |>
ggplot(aes(values = n, label = rapp, colour = rapp)) +
geom_pictogram(make_proportional = T, flip = T, size = 6) +
scale_label_pictogram(
values = c("user")
) +
scale_color_manual(values = met.brewer('Tiepolo', 4)) +
facet_wrap(~occ) +
labs(title = 'Attitude towards staying') +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
#| label: Living satisfaction index
#| height: 5
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: Living satisfaction index
#| height: 3
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: Living satisfaction index
#| height: 2
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: Living satisfaction index
#| fig-height: 3
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: Living satisfaction index
#| fig-height: 3
#| fig-width: 5
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: Living satisfaction index
#| fig-height: 3
#| fig-width: 6
# Dataviz ----------------------------------------------------------------------
## Index by urban zone
abPlotZon <- Abitare |>
filter(prov_dom == 'Terni' | prov_dom == 'Perugia') |>
group_by(zon) |>
summarise(meanzon = mean(abInd)) |>
mutate(ovmean = mean(meanzon),
flag = ifelse(meanzon > ovmean, T, F),
zon = factor(zon,
levels = zon[order(meanzon)]))
ggPlotZon <- abPlotZon |>
mutate(zon = case_match(zon,
'Periferia' ~ 'Suburbs',
'Centro Cittadino' ~ 'City centre',
'Area Rurale' ~ 'Rural area'
)) |>
ggplot(aes(x = zon, y = meanzon, colour = flag, data_id = zon, tooltip = round(meanzon, 2))) +
geom_point_interactive(size = 6) +
geom_segment_interactive(aes(y = ovmean, yend = meanzon, x = zon, xend = zon)) +
geom_point(size = 4, colour = 'white') +
scale_y_continuous(n.breaks = 4) +
geom_hline(yintercept = abPlotZon$ovmean[1], colour = 'gray70', size = 0.3) +
scale_color_met_d('Degas') +
coord_flip() +
labs(title = 'Living condition satisfaction index',
subtitle = 'Decomposition by area') +
theme_minimal() +
theme(axis.title = element_blank(),
legend.position = 'none',
plot.title = element_text(hjust = .5, size = 20),
plot.subtitle = element_text(hjust = .5, size = 15),
axis.text.y = element_text(size = 11))
### Interactive graph
girafe(ggobj = ggPlotZon,
width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
